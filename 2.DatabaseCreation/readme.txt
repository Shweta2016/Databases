************************************************************************************************************
COEN 280 Homework 2 : Map EER to RDBMS
************************************************************************************************************


Name : Shweta Kharat
Database : DB11G (TABLE SPACE NAME: SKHARAT)
************************************************************************************************************


TABLES GENERATED BY CREATEDB.SQL
************************************************************************************************************

SQL> SELECT * FROM MOVIE;

SERIAL_NO  TITLE					      RELEASE_YEAR DIRECTOR
---------- -------------------------------------------------- ----------------------

M1	   Scarface						      1988 P1

M2	   Scent of a women					      1995 P2

M3	   My big fat greek wedding				      2000 P4

M4	   The Devil's Advocate 				      1997  P1

M5	   Mr. and Mrs Smith					      1965  P1

M6	   Now You see me					      2013  P2

M7	   Barely Lethal					      2014 P4

M8	   The Man with one red shoe				      1984 P1

M9	   The Polar Express					      2010  P2

M10	   Her							      2013 P2

M11	   Lucy 						      2015 P4

M12	   The Da Vinci Code					      2005 P4

M13	   The God Father part II				      1975 P1

M15	   Angels and Daemons					      2009 P2

M16	   The Island						      2010 P4


15 rows selected.


*****************************************************************************************************
SQL> SELECT * FROM PERSON;

PERSON_ID  NAME 					      BIRTHDATE  GENDER	   BIRTHPLACE		PERSON_TYP
---------- -------------------------------------------------- ------------------- -------------------- ----------

P1	   Brian de forma				      11-SEP-40  M	   New York		Director

P2	   Martin Brest 				      08-AUG-51  M	   San Jose		Director

P3	   Scarlett Johanson				  22-NOV-84  F	   Austin		Actor

P4	   Luc Besson					      30-MAY-75  F	   Paris		Director

P5	   Morgan Freeman				      05-JUN-53  M	   Canberra		Actor

P6	   Al Pacino					      12-NOV-56  M	   Portland		Actor

P7	   Angelina Jolie				      03-MAR-70  F	   Seattle		Actor

P8	   Brad Pitt					      04-APR-75  M	   London		Actor

P9	   Tom Hanks					      19-MAY-64  M	   Perth		Actor

P10	   Jessica Alba 				      07-AUG-83  F	   Seoul		Actor

P12	   Alex Parish					      09-JUL-77  F	   San Jose		Actor

P13	   Jack Nicholson				      13-NOV-58  M	   Austin		Actor

P15	   Harrison Ford				      11-SEP-57  M	   Canberra		Actor

P16	   Julia Roberts				      01-JAN-67  F	   Portland		Actor

P17	   Matt Damon					      07-JAN-71  M	   Seattle		Actor

P18	   Jennifer Lawrence				  02-FEB-62  F	   London		Actor

P19	   George clooney				      03-MAR-65  M	   Perth		Actor

P20	   Jennifer Aniston				      04-APR-68  F	   Seoul		Actor

18 rows selected.


*********************************************************************************
SQL> SELECT * FROM ROLES;

MOVIE_ID   PERSON_ID  ROLE
---------- ---------- --------------------
M1	   P5	      Jessica
M1	   P6	      robert
M2	   P5	      John
M2	   P6	      Mark
M3	   P9	      Alex
M3	   P7	      Julie
M4	   P5	      Jessica
M4	   P6	      Matt
M4	   P8	      Jennifer
M5	   P7	      Jennifer
M5	   P8	      Tom

MOVIE_ID   PERSON_ID  ROLE
---------- ---------- --------------------
M5	   P5	      Milo
M6	   P6	      Chris
M6	   P7	      Rose
M6	   P5	      Bill
M7	   P10	      Jane
M7	   P5	      Brad
M8	   P9	      Lucas
M8	   P10	      Juanita
M9	   P9	      Clayne
M9	   P9	      Jane
M9	   P9	      Brad

MOVIE_ID   PERSON_ID  ROLE
---------- ---------- --------------------
M9	   P9	      Lucas
M9	   P9	      Bradley
M9	   P9	      Justin
M9	   P17	      Martin
M9	   P19	      Mike
M10	   P3	      Travis
M10	   P5	      Alexander
M10	   P6	      Justin
M11	   P3	      Jessica
M11	   P5	      Johnny
M11	   P8	      Rami

MOVIE_ID   PERSON_ID  ROLE
---------- ---------- --------------------
M11	   P9	      Sam
M12	   P9	      Gatek
M12	   P10	      Rose
M12	   P3	      maria
M13	   P5	      Travis
M13	   P6	      Alexander
M13	   P16	      Pearl
M15	   P12	      Sofia
M15	   P18	      chrissy
M15	   P9	      Mike
M16	   P10	      Martin

MOVIE_ID   PERSON_ID  ROLE
---------- ---------- --------------------
M16	   P15	      Bill
M16	   P16	      Emilia

46 rows selected.



***************************************************************************************
SQL> SELECT * FROM REVIEW;

REVIEW_ID  MOVIE_ID   AUTHOR	     RATING	 VOTES  PUBLISH_DATE
---------- ---------- ---------- ---------- ---------- ---------------------------------------------------------------------------

R1	   M1	      ID1		  7	    25  02-OCT-07 09.10.54.000000 AM AMERICA/LOS_ANGELES

R2	   M2	      ID2		  8	    35  29-SEP-07 01.45.00.000000 PM AMERICA/LOS_ANGELES

R3	   M2	      ID3		  9	    24  29-SEP-07 10.38.25.000000 AM AMERICA/LOS_ANGELES

R4	   M3	      ID4		 10	     8  02-OCT-13 01.05.56.000000 PM AMERICA/LOS_ANGELES

R5	   M3	      ID5		  9	    11  25-OCT-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R6	   M4	      ID6		  8	     6  26-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R7	   M4	      ID7		  7	    23  26-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R8	   M5	      ID9		  8	    22  28-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R9	   M6	      ID10		  8	    26  29-OCT-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R10	   M7	      ID11		  8	    27  30-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R11	   M7	      ID12		  8	    18  25-OCT-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R12	   M8	      ID1		  7	    19  25-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R13	   M9	      ID2		  7	    16  25-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R14	   M10	      ID3		  8	    18  29-SEP-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R15	   M11	      ID4		  9	    22  07-JUN-15 05.15.00.000000 PM AMERICA/LOS_ANGELES

R16	   M11	      ID5		 10	    13  05-MAY-15 05.15.00.000000 PM AMERICA/LOS_ANGELES

R17	   M12	      ID6		  9	    50  05-MAY-15 05.15.00.000000 PM AMERICA/LOS_ANGELES

R18	   M13	      ID7		  5	    34  25-OCT-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R19	   M13	      ID1		  4	    34  25-OCT-07 05.15.00.000000 PM AMERICA/LOS_ANGELES

R20	   M15	      ID10		  8	    25  05-MAY-15 05.15.00.000000 PM AMERICA/LOS_ANGELES

R21	   M16	      ID11		  7	    12  05-MAY-15 05.15.00.000000 PM AMERICA/LOS_ANGELES

21 rows selected.



*****************************************************************************
SQL> SELECT * FROM IMDB_USER;

USER_ID    EMAIL                								  FNAME		     LNAME		 	 BIRTHDATE BIRTHPLACE GENDER
---------- -------------------------------------------------- -------------------- -------------------- --------- ---------- ----------

ID1	   john@yahoo.com            John		     Smith		  05-OCT-95 FL	       M

ID2	   juan@gmail.com            Juan		     Carlos		  12-APR-94 AK	       M

ID3	   jane@gmail.com            Jane		     Chapel		  02-NOV-93 IL	       F

ID4	   adi@yahoo.com             Aditya		     Awasthi		  12-DEC-92 CA	       M

ID5	   james@hotmail.com         James		     Williams		  05-MAY-91 NY	       M

ID6	   mike@yahoo.com            Mike		     Brown		  01-MAR-88 NC	       M

ID7	   bob@yahoo.com             Bob		     Jones		  07-FEB-88 NY	       M

ID8	   wei@gmail.com             Wei		     Zhang		  12-AUG-85 NV	       F

ID9	   mark@gmail.com            Mark		     Davis		  10-MAY-84 CA	       M

ID10	   daniel@yahoo.com      Daniel		     Garcia		  01-JUN-80 NJ	       M

ID11	   maria@hotmail.com     Maria		     Rodriguez		  18-MAR-75 CA	       F

ID12	   freya@yahoo.com      Freya		     Wilson		  19-FEB-70 NJ	       F

12 rows selected.



*****************************************************************************************************************************

OUTPUT Q1.SQL
*****************************************************************************************************************************
SQL> SELECT P.NAME FROM PERSON P, ROLES R, MOVIE M WHERE P.PERSON_ID = R.PERSON_ID AND R.MOVIE_ID = M.SERIAL_NO AND M.TITLE = 'The Da Vinci Code' ORDER BY P.NAME ASC;

NAME
--------------------------------------------------
Jessica Alba
Scarlett Johanson
Tom Hanks



OUTPUT Q2.SQL
*******************************************************************************************************************************
SQL> SELECT M.SERIAL_NO, M.TITLE, M.RELEASE_YEAR, R.RATING, R.VOTES FROM MOVIE M, REVIEW R WHERE R.RATING >= ALL(SELECT MAX(RATING) FROM REVIEW) AND R.MOVIE_ID=M.SERIAL_NO ORDER BY M.SERIAL_NO ASC;

SERIAL_NO  TITLE					                          RELEASE_YEAR  RATINGS    VOTES
---------- -------------------------------------------------- ------------  ---------- ----------

M11	          Lucy 						                        2015              10	   13

M3	          My big fat greek wedding				            2000              10	    8



OUTPUT Q3.SQL
*******************************************************************************************************************************
SQL> SELECT MO.SERIAL_NO, MO.TITLE, MO.RELEASE_YEAR, MO.DIRECTOR, RA.RATING FROM MOVIE MO, REVIEW RA WHERE RA.RATING <= ALL(SELECT MIN(RA.RATING) FROM REVIEW RA, MOVIE MO WHERE RA.MOVIE_ID IN (SELECT R.MOVIE_ID FROM REVIEW R, MOVIE M WHERE M.SERIAL_NO = R.MOVIE_ID GROUP BY M.SERIAL_NO HAVING COUNT (M.SERIAL_NO) = (SELECT MAX (COUNT1) FROM (SELECT R.MOVIE_ID, COUNT(M.SERIAL_NO) COUNT1 FROM REVIEW R, MOVIE M WHERE M.SERIAL_NO = R.MOVIE_ID GROUP BY M.SERIAL_NO))) AND RA.MOVIE_ID = MO.SERIAL_NO) AND MO.SERIAL_NO = RA.MOVIE_ID ORDER BY MO.SERIAL_NO;

SERIAL_NO  TITLE					                         RELEASE_YEAR  DIRECTOR       RATING
---------- -------------------------------------------------- ------------ ---------- ----------

M13	          The God Father part II				                1975        P1		    4




OUTPUT Q4.SQL
**********************************************************************************************************************************
SQL> SELECT CONCAT(LPAD(CAST(RELEASE_YEAR AS VARCHAR(4)),3) , '0') AS DECADE_WITH_MAX_MOVIES FROM MOVIE GROUP BY LPAD(CAST(RELEASE_YEAR AS VARCHAR(4)),3) HAVING COUNT(SERIAL_NO) = (SELECT MAX(N) FROM (SELECT COUNT(SERIAL_NO) AS N, CONCAT(LPAD(CAST(RELEASE_YEAR AS VARCHAR(4)),3) , '0') AS DECADE FROM MOVIE GROUP BY LPAD(CAST(RELEASE_YEAR AS VARCHAR(4)),3) ORDER BY N DESC));

DECADE_WITH_MAX_MOVIES
----------------------
2010




OUTPUT Q5.SQL
**********************************************************************************************************************************
SQL> SELECT M.TITLE, COUNT(DISTINCT(R.PERSON_ID)) AS CAST_SIZE FROM MOVIE M, ROLES R WHERE M.SERIAL_NO = R.MOVIE_ID GROUP BY M.TITLE HAVING COUNT(DISTINCT(R.PERSON_ID)) = (SELECT MAX(COUNTED) FROM( SELECT COUNT(DISTINCT(R.PERSON_ID)) AS COUNTED FROM ROLES R GROUP BY MOVIE_ID));

TITLE						                       CAST_SIZE
-------------------------------------------------- ----------
Lucy							                     4





OUTPUT Q6.SQL
**********************************************************************************************************************************
SQL> SELECT P.NAME, M.TITLE, COUNT(R.MOVIE_ID) AS NUM_DISTINCT_ROLES FROM PERSON P, MOVIE M, ROLES R WHERE P.PERSON_ID = R.PERSON_ID AND M.SERIAL_NO = R.MOVIE_ID GROUP BY P.NAME, M.TITLE HAVING COUNT(R.MOVIE_ID) >=5;

NAME                                                            TITLE						          NUM_DISTINCT_ROLES
-------------------------------------------------- -------------------------------------------------- ------------------

Tom Hanks                                                    The Polar Express						    6





OUTPUT Q7.SQL
**********************************************************************************************************************************
SQL> SELECT M.SERIAL_NO, M.TITLE, M.RELEASE_YEAR, M.DIRECTOR, MAX(R.RATING) FROM REVIEW R, MOVIE M WHERE M.SERIAL_NO = R.MOVIE_ID AND M.RELEASE_YEAR >= 2005 GROUP BY M.SERIAL_NO, M.TITLE, M.RELEASE_YEAR, M.DIRECTOR ORDER BY M.RELEASE_YEAR ASC ;

SERIAL_NO      TITLE					                      RELEASE_YEAR   DIRECTOR   MAX(R.RATING)
---------- -------------------------------------------------- ------------ ---------- -------------


M12	                   The Da Vinci Code					       2005        P4		       9


M15	                   Angels and Daemons					       2009        P2		       8


M16	                   The Island						           2010         P4		       7



SERIAL_NO       TITLE					                      RELEASE_YEAR   DIRECTOR   MAX(R.RATING)
---------- -------------------------------------------------- ------------ ---------- -------------


M9	                    The Polar Express					      2010         P2		       7


M10	                    Her							              2013         P2		       8


M6	                    Now You see me					          2013          P2		       8



SERIAL_NO       TITLE					                      RELEASE_YEAR   DIRECTOR   MAX(R.RATING)
---------- -------------------------------------------------- ------------ ---------- -------------


M7	                    Barely Lethal					        2014           P4		       8


M11	                      Lucy 						            2015            P4		      10



8 rows selected.




OUTPUT Q8.SQL
**************************************************************************************************************************************

SQL> CREATE VIEW HIGH_RATING AS SELECT DISTINCT P.NAME FROM PERSON P, ROLES R, MOVIE M, REVIEW RA WHERE P.PERSON_ID = R.PERSON_ID AND M.SERIAL_NO = R.MOVIE_ID AND RA.MOVIE_ID = M.SERIAL_NO AND RA.RATING >= 8;

View created.

SQL> CREATE VIEW LOW_RATING AS SELECT DISTINCT P.NAME FROM PERSON P, ROLES R, MOVIE M, REVIEW RA WHERE P.PERSON_ID = R.PERSON_ID AND M.SERIAL_NO = R.MOVIE_ID AND RA.MOVIE_ID = M.SERIAL_NO AND RA.RATING < 8;

View created.

SQL> SELECT COUNT(*) FROM HIGH_RATING;

  COUNT(*)
----------
	 9

SQL> SELECT COUNT(*) FROM LOW_RATING;

  COUNT(*)
----------
	 9

SQL> SELECT COUNT(*) FROM HIGH_RATING WHERE NAME NOT IN(SELECT NAME FROM LOW_RATING);

  COUNT(*)
----------
	 4

SQL> CREATE VIEW NO_FLOP AS SELECT * FROM HIGH_RATING WHERE NAME NOT IN(SELECT NAME FROM LOW_RATING);

View created.

SQL> SELECT NF.NAME, COUNT(M.SERIAL_NO) AS MCOUNT FROM NO_FLOP NF, MOVIE M, ROLES R, PERSON P WHERE M.SERIAL_NO = R.MOVIE_ID AND R.PERSON_ID = P.PERSON_ID AND P.NAME = NF.NAME AND ROWNUM<=10 GROUP BY NF.NAME ORDER BY MCOUNT, NF.NAME ASC;

NAME						       					MCOUNT
-------------------------------------------------- ----------
Angelina Jolie						 				   3
Scarlett Johanson					 				   3
Alex Parish						  					   1
Jennifer Lawrence								       1





OUTPUT Q9.SQL
*********************************************************************************************************************************
SQL> CREATE VIEW ALPACINO_MOVIES AS SELECT M.SERIAL_NO FROM MOVIE M, ROLES R, PERSON P WHERE M.SERIAL_NO = R.MOVIE_ID AND R.PERSON_ID = P.PERSON_ID AND P.NAME = 'Al Pacino';

View created.

SQL> SELECT DISTINCT P.NAME FROM PERSON P, ALPACINO_MOVIES A, ROLES R WHERE A.SERIAL_NO = R.MOVIE_ID AND P.PERSON_ID = R.PERSON_ID;

NAME
--------------------------------------------------
Scarlett Johanson
Julia Roberts
Al Pacino
Angelina Jolie
Brad Pitt
Morgan Freeman

6 rows selected.




OUTPUT Q10.SQL
**********************************************************************************************************************************
SQL> CREATE VIEW ACTOR_LONGETIVITY AS SELECT P.NAME, (MAX(M.RELEASE_YEAR) - MIN(M.RELEASE_YEAR)) AS DIFF FROM MOVIE M, PERSON P, ROLES R WHERE M.SERIAL_NO = R.MOVIE_ID AND P.PERSON_ID = R.PERSON_ID GROUP BY P.NAME ORDER BY 2 DESC;

View created.

SQL> SELECT A.NAME FROM ACTOR_LONGETIVITY A WHERE A.DIFF >= ALL (SELECT DIFF FROM ACTOR_LONGETIVITY) ORDER BY A.NAME ASC;

NAME
--------------------------------------------------
Brad Pitt
Morgan Freeman




